@@ -1300,51 +1231,38 @@
 
 (autoload 'swift-mode "swift-mode" nil t)
 
 ;; ycmd
 (require 'ycmd-next-error)
 (autoload 'ycmd-mode "ycmd" nil t)
-(autoload 'global-ycmd-mode "ycmd" nil t)
-(autoload 'ycmd-goto "ycmd" nil t)
-(autoload 'ycmd-get-type "ycmd" nil t)
-(autoload 'company-ycmd "company-ycmd" nil t)
-
-(global-set-key (kbd "M-.") 'ycmd-goto)
-(global-set-key (kbd "<S-return>") 'company-ycmd)
-
-;; -u解决hang的问题
-(set-variable 'ycmd-server-command '("python" "-u" "D:/ycmd/ycmd-master/ycmd"))
-(set-variable 'ycmd-global-config "~/.ycm_extra_conf.py")
-;; (set-variable 'ycmd-extra-conf-whitelist '("~/my_projects/*"))
-(setq ycmd-extra-conf-handler 'load)
-
-
-(eval-after-load "ycmd"
-  '(progn
-	 (message "ycmd")
-	 ;; (require 'auto-complete-ycmd)
-	 (global-ycmd-mode)
-	 (require 'company-ycmd)  
-	 (company-ycmd-setup) 
+(eval-after-load "ycmd"
+  '(progn
+	 (set-variable 'ycmd-server-command '("C:/Python27/python.exe" "-u" "D:/ycmd/ycmd"))
+	 (set-variable 'ycmd-global-config "~/.ycm_extra_conf.py")
+	 (setq ycmd-extra-conf-handler 'load)
+	 (require 'company-ycmd)
+	 (company-ycmd-setup)
 	 ;; (require 'flycheck-ycmd)
-	 ;; (flycheck-ycmd-setup)
+	 ;; Make sure the flycheck cache sees the parse results
 	 ;; (add-hook 'ycmd-file-parse-result-hook 'flycheck-ycmd--cache-parse-results)
+	 ;; Add the ycmd checker to the list of available checkers
 	 ;; (add-to-list 'flycheck-checkers 'ycmd)
 	 ;; (require 'ycmd-eldoc)
 	 ;; (add-hook 'ycmd-mode-hook 'ycmd-eldoc-setup)
 	 (setq url-show-status nil)
 	 (setq ycmd-request-message-level -1)
-	 ;; (setq ycmd-force-semantic-completion t)
-	 (global-set-key (kbd "C-.") 'ycmd-get-parent)
-	 (global-set-key (kbd "M-p") 'ycmd-get-type)
-	 (defadvice ycmd-goto (before ycmd-goto-bef activate)
+	 (setq ycmd-force-semantic-completion t)
+
+	 (global-set-key (kbd "M-.") 'ycmd-goto)
+	 (global-set-key (kbd "M-p") 'ycmd-get-parent)
+	 (global-set-key (kbd "C-.") 'ycmd-get-type)
+
+	 (defadvice ycmd-goto (before ycmd-goto-mru activate)
 	   ""
-	   (message "ycmd-goto")
-	   (ring-insert semantic-tags-location-ring (point-marker)))	 
+	   (ring-insert semantic-tags-location-ring (point-marker)))
 	 ))
-
 ;;-----------------------------------------------------------plugin end-----------------------------------------------------------;;
 
 ;;-----------------------------------------------------------define func begin----------------------------------------------------;;
 ;; 资源管理器中打开
 (defun open-in-desktop-select (&optional dired)
   (interactive "P")
@@ -1991,22 +1909,22 @@
 
 ;; 大文件处理
 (defun check-large-file-hook ()
   ""
   (when (< (* 200 1024) (buffer-size))
 	;; (nlinum-mode -1)
+	;; (diff-hl-mode -1)
 	(setq-local jit-lock-context-time 5)
 	(setq-local jit-lock-defer-time 5)
 	(setq-local font-lock-maximum-decoration 2)
 	(font-lock-refresh-defaults)
-	(setq semantic-idle-scheduler-idle-time 20)
-	;; (font-lock-add-keywords nil ;这个不要打开，会影响性能
+	;; (font-lock-add-keywords nil
 	;; 						'(("\\(\\_<\\(\\w\\|\\s_\\)+\\_>\\)[ 	]*("
 	;; 						   1  zjl-c-hl-function-call-face keep))
 	;; 						1)
-	;; (font-lock-add-keywords ;这个不要打开，会影响性能
+	;; (font-lock-add-keywords
 	;;  nil
 	;;  '((my-c-mode-font-lock-if0 (0 shadow prepend))) 'add-to-end)
 	;; (font-lock-mode -1 )
 	;; (jit-lock-mode nil)
 	;; (diff-hl-mode -1)
 	))
@@ -2131,13 +2049,13 @@
 			(setq-local ac-auto-start nil)
 			(setq-local indent-tabs-mode nil)
 			(irony-mode)
 			(irony--mode-exit)
 			(eldoc-mode 0)
 			(company-mode 1)
-			;; (ycmd-mode 1)
+			(ycmd-mode 1)
 			(abbrev-mode 0)
 			;; (flycheck-mode 1)
 			(yas-glo-on)
 			(check-large-file-hook)
 			(font-lock-add-keywords nil
 									'(("\\(\\_<\\(\\w\\|\\s_\\)+\\_>\\)[ 	]*("
